pipeline {
  agent none
  
  stages{
    stage("build"){
      agent {
        docker{
          image 'python:2.7.16-slim'
          args '--user root'
        }
      }
      
      when{
         changeset "**/vote/**"
      }
      
      steps{
        echo 'Compiling vote app'
        dir('vote'){
          sleep 15
          sh 'pip install --upgrade pip'
          sh 'pip install -r requirements.txt'
        }
      }
    }
    
    stage("test"){
      agent {
        docker{
          image 'python:2.7.16-slim'
          args '--user root'
        }
      }
      when{
         changeset "**/vote/**"
      }
      steps{
        echo 'Running Unit Test on vote app'
        dir('vote'){
          sh 'pip install --upgrade pip'
          sh 'pip install -r requirements.txt'
          sh 'nosetests -v'
          sleep 15
        }
      }
    }
    
  }
  
  post{        
      success {
        slackSend (channel: "instavote", message: "ilham - Build Succeeded - Vote App - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
      }
      failure {
        slackSend (channel: "instavote", message: "ilham - Build Failed - Vote App - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
      }
      always{
        echo 'Building multibranch pipeline for vote is completed..'
      }
  }
}
